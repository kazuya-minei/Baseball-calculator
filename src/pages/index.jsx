import Head from 'next/head';
import styles from '../styles/Home.module.css';
import { Footer } from 'src/components/Footer'
import { Header } from 'src/components/Header';

export default function Home(props) {
  // const [isBaShow, setIsBaShow] = useState(true);     コンポーネントを呼び出して使っていた
  // const [isEraShow, setIsEraShow] = useState(false);
  // const FunctionChange = () => {
  //   setIsBaShow((isBaShow) => {
  //     return !isBaShow;  // true/falseを反転
  //   })
  //   setIsEraShow((isEraShow) => {
  //     return !isEraShow;
  //   })
  // }

// const { isFunction, changeFunction } = useFunctionChanger();  フックスで対応していたが
//                                                               Stateリフトアップの学習の為_app.jsxに移動 
  const { isFunction, changeFunction } = props;  

  return (
    <div className={styles.container}>
      <Head>
        <title>野球計算機</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Header />

      <main className={styles.main}> 
      {/* .jsxの記法の制限により、return文の中でif文は使えない 
          代わりに三項演算子。nullを返すことで何も表示させないということができる
          {isBaShow ? <BattingAvarage /> : null}     ←
          {isEraShow ? <EarnedRunAverage /> : null}  ←以前までの記述

          onClick={changeFunction("ERA")}だと、 Too many re-renders. というエラーが発生するので
          アロー関数で対応*/}
      <div className={styles.buttons}>
        <div className={styles.changeButton} onClick={() => changeFunction("BA")}>打率</div>
        <div className={styles.changeButton} onClick={() => changeFunction("ERA")}>防御率</div>
        <div className={styles.changeButton} onClick={() => changeFunction("FA")}>守備率</div>
      </div>
        {isFunction}  
      </main>
      
      <Footer />
    </div>
  )
}
